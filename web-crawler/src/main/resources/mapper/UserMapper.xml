<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="large_avatar" jdbcType="VARCHAR" property="largeAvatar" />
    <result column="register_date" jdbcType="DATE" property="registerDate" />
    <result column="personal_website" jdbcType="VARCHAR" property="personalWebsite" />
    <result column="user_intro" jdbcType="VARCHAR" property="userIntro" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="email_confirmed" jdbcType="INTEGER" property="emailConfirmed" />
    <result column="code" jdbcType="VARCHAR" property="code" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, password, large_avatar, register_date, personal_website, user_intro, 
    email, email_confirmed, code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.User">
    insert into t_user (user_id, user_name, password, 
      large_avatar, register_date, personal_website, 
      user_intro, email, email_confirmed, 
      code)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{largeAvatar,jdbcType=VARCHAR}, #{registerDate,jdbcType=DATE}, #{personalWebsite,jdbcType=VARCHAR}, 
      #{userIntro,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{emailConfirmed,jdbcType=INTEGER}, 
      #{code,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="largeAvatar != null">
        large_avatar,
      </if>
      <if test="registerDate != null">
        register_date,
      </if>
      <if test="personalWebsite != null">
        personal_website,
      </if>
      <if test="userIntro != null">
        user_intro,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="emailConfirmed != null">
        email_confirmed,
      </if>
      <if test="code != null">
        code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="largeAvatar != null">
        #{largeAvatar,jdbcType=VARCHAR},
      </if>
      <if test="registerDate != null">
        #{registerDate,jdbcType=DATE},
      </if>
      <if test="personalWebsite != null">
        #{personalWebsite,jdbcType=VARCHAR},
      </if>
      <if test="userIntro != null">
        #{userIntro,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailConfirmed != null">
        #{emailConfirmed,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.User">
    update t_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="largeAvatar != null">
        large_avatar = #{largeAvatar,jdbcType=VARCHAR},
      </if>
      <if test="registerDate != null">
        register_date = #{registerDate,jdbcType=DATE},
      </if>
      <if test="personalWebsite != null">
        personal_website = #{personalWebsite,jdbcType=VARCHAR},
      </if>
      <if test="userIntro != null">
        user_intro = #{userIntro,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailConfirmed != null">
        email_confirmed = #{emailConfirmed,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.User">
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      large_avatar = #{largeAvatar,jdbcType=VARCHAR},
      register_date = #{registerDate,jdbcType=DATE},
      personal_website = #{personalWebsite,jdbcType=VARCHAR},
      user_intro = #{userIntro,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      email_confirmed = #{emailConfirmed,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>