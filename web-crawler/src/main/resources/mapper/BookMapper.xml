<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.BookMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Book">
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="book_title" jdbcType="VARCHAR" property="bookTitle" />
    <result column="series_id" jdbcType="INTEGER" property="seriesId" />
    <result column="book_intro" jdbcType="VARCHAR" property="bookIntro" />
    <result column="feature" jdbcType="VARCHAR" property="feature" />
    <result column="book_date" jdbcType="DATE" property="bookDate" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="also_like_id" jdbcType="INTEGER" property="alsoLikeId" />
    <result column="image_link" jdbcType="VARCHAR" property="imageLink" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="book_vote" jdbcType="INTEGER" property="bookVote" />
    <result column="book_enter_num" jdbcType="INTEGER" property="bookEnterNum" />
    <result column="is_ebook" jdbcType="INTEGER" property="isEbook" />
    <result column="ebook_price" jdbcType="NUMERIC" property="ebookPrice" />
    <result column="paper_original_price" jdbcType="NUMERIC" property="paperOriginalPrice" />
    <result column="paper_sale_price" jdbcType="NUMERIC" property="paperSalePrice" />
    <result column="amazon_link" jdbcType="VARCHAR" property="amazonLink" />
    <result column="dangdang_link" jdbcType="VARCHAR" property="dangdangLink" />
    <result column="jd_link" jdbcType="VARCHAR" property="jdLink" />
    <result column="enable_gift" jdbcType="INTEGER" property="enableGift" />
    <result column="sample_download" jdbcType="VARCHAR" property="sampleDownload" />
    <result column="with_book_download" jdbcType="VARCHAR" property="withBookDownload" />
    <result column="big_image_link" jdbcType="VARCHAR" property="bigImageLink" />
    <result column="ninety_book_enter_num" jdbcType="INTEGER" property="ninetyBookEnterNum" />
    <result column="first_grade_id" jdbcType="INTEGER" property="firstGradeId" />
    <result column="second_grade_id" jdbcType="INTEGER" property="secondGradeId" />
    <result column="third_grade_id" jdbcType="INTEGER" property="thirdGradeId" />
    <result column="modified_date" jdbcType="DATE" property="modifiedDate" />
    <result column="ebook_sale_price" jdbcType="NUMERIC" property="ebookSalePrice" />
  </resultMap>
  <sql id="Base_Column_List">
    book_id, book_title, series_id, book_intro, feature, book_date, category_id, also_like_id, 
    image_link, label, book_vote, book_enter_num, is_ebook, ebook_price, paper_original_price, 
    paper_sale_price, amazon_link, dangdang_link, jd_link, enable_gift, sample_download, 
    with_book_download, big_image_link, ninety_book_enter_num, first_grade_id, second_grade_id, 
    third_grade_id, modified_date, ebook_sale_price
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_book
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Book">
    insert into t_book (book_id, book_title, series_id, 
      book_intro, feature, book_date, 
      category_id, also_like_id, image_link, 
      label, book_vote, book_enter_num, 
      is_ebook, ebook_price, paper_original_price, 
      paper_sale_price, amazon_link, dangdang_link, 
      jd_link, enable_gift, sample_download, 
      with_book_download, big_image_link, ninety_book_enter_num, 
      first_grade_id, second_grade_id, third_grade_id, 
      modified_date, ebook_sale_price)
    values (#{bookId,jdbcType=INTEGER}, #{bookTitle,jdbcType=VARCHAR}, #{seriesId,jdbcType=INTEGER}, 
      #{bookIntro,jdbcType=VARCHAR}, #{feature,jdbcType=VARCHAR}, #{bookDate,jdbcType=DATE}, 
      #{categoryId,jdbcType=INTEGER}, #{alsoLikeId,jdbcType=INTEGER}, #{imageLink,jdbcType=VARCHAR}, 
      #{label,jdbcType=VARCHAR}, #{bookVote,jdbcType=INTEGER}, #{bookEnterNum,jdbcType=INTEGER}, 
      #{isEbook,jdbcType=INTEGER}, #{ebookPrice,jdbcType=NUMERIC}, #{paperOriginalPrice,jdbcType=NUMERIC}, 
      #{paperSalePrice,jdbcType=NUMERIC}, #{amazonLink,jdbcType=VARCHAR}, #{dangdangLink,jdbcType=VARCHAR}, 
      #{jdLink,jdbcType=VARCHAR}, #{enableGift,jdbcType=INTEGER}, #{sampleDownload,jdbcType=VARCHAR}, 
      #{withBookDownload,jdbcType=VARCHAR}, #{bigImageLink,jdbcType=VARCHAR}, #{ninetyBookEnterNum,jdbcType=INTEGER}, 
      #{firstGradeId,jdbcType=INTEGER}, #{secondGradeId,jdbcType=INTEGER}, #{thirdGradeId,jdbcType=INTEGER}, 
      #{modifiedDate,jdbcType=DATE}, #{ebookSalePrice,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Book">
    insert into t_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="bookTitle != null">
        book_title,
      </if>
      <if test="seriesId != null">
        series_id,
      </if>
      <if test="bookIntro != null">
        book_intro,
      </if>
      <if test="feature != null">
        feature,
      </if>
      <if test="bookDate != null">
        book_date,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="alsoLikeId != null">
        also_like_id,
      </if>
      <if test="imageLink != null">
        image_link,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="bookVote != null">
        book_vote,
      </if>
      <if test="bookEnterNum != null">
        book_enter_num,
      </if>
      <if test="isEbook != null">
        is_ebook,
      </if>
      <if test="ebookPrice != null">
        ebook_price,
      </if>
      <if test="paperOriginalPrice != null">
        paper_original_price,
      </if>
      <if test="paperSalePrice != null">
        paper_sale_price,
      </if>
      <if test="amazonLink != null">
        amazon_link,
      </if>
      <if test="dangdangLink != null">
        dangdang_link,
      </if>
      <if test="jdLink != null">
        jd_link,
      </if>
      <if test="enableGift != null">
        enable_gift,
      </if>
      <if test="sampleDownload != null">
        sample_download,
      </if>
      <if test="withBookDownload != null">
        with_book_download,
      </if>
      <if test="bigImageLink != null">
        big_image_link,
      </if>
      <if test="ninetyBookEnterNum != null">
        ninety_book_enter_num,
      </if>
      <if test="firstGradeId != null">
        first_grade_id,
      </if>
      <if test="secondGradeId != null">
        second_grade_id,
      </if>
      <if test="thirdGradeId != null">
        third_grade_id,
      </if>
      <if test="modifiedDate != null">
        modified_date,
      </if>

      <if test="ebookSalePrice != null">
        ebook_sale_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookTitle != null">
        #{bookTitle,jdbcType=VARCHAR},
      </if>
      <if test="seriesId != null">
        #{seriesId,jdbcType=INTEGER},
      </if>
      <if test="bookIntro != null">
        #{bookIntro,jdbcType=VARCHAR},
      </if>
      <if test="feature != null">
        #{feature,jdbcType=VARCHAR},
      </if>
      <if test="bookDate != null">
        #{bookDate,jdbcType=DATE},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="alsoLikeId != null">
        #{alsoLikeId,jdbcType=INTEGER},
      </if>
      <if test="imageLink != null">
        #{imageLink,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="bookVote != null">
        #{bookVote,jdbcType=INTEGER},
      </if>
      <if test="bookEnterNum != null">
        #{bookEnterNum,jdbcType=INTEGER},
      </if>
      <if test="isEbook != null">
        #{isEbook,jdbcType=INTEGER},
      </if>
      <if test="ebookPrice != null">
        #{ebookPrice,jdbcType=NUMERIC},
      </if>
      <if test="paperOriginalPrice != null">
        #{paperOriginalPrice,jdbcType=NUMERIC},
      </if>
      <if test="paperSalePrice != null">
        #{paperSalePrice,jdbcType=NUMERIC},
      </if>
      <if test="amazonLink != null">
        #{amazonLink,jdbcType=VARCHAR},
      </if>
      <if test="dangdangLink != null">
        #{dangdangLink,jdbcType=VARCHAR},
      </if>
      <if test="jdLink != null">
        #{jdLink,jdbcType=VARCHAR},
      </if>
      <if test="enableGift != null">
        #{enableGift,jdbcType=INTEGER},
      </if>
      <if test="sampleDownload != null">
        #{sampleDownload,jdbcType=VARCHAR},
      </if>
      <if test="withBookDownload != null">
        #{withBookDownload,jdbcType=VARCHAR},
      </if>
      <if test="bigImageLink != null">
        #{bigImageLink,jdbcType=VARCHAR},
      </if>
      <if test="ninetyBookEnterNum != null">
        #{ninetyBookEnterNum,jdbcType=INTEGER},
      </if>
      <if test="firstGradeId != null">
        #{firstGradeId,jdbcType=INTEGER},
      </if>
      <if test="secondGradeId != null">
        #{secondGradeId,jdbcType=INTEGER},
      </if>
      <if test="thirdGradeId != null">
        #{thirdGradeId,jdbcType=INTEGER},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=DATE},
      </if>
      <if test="ebookSalePrice != null">
        #{ebookSalePrice,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Book">
    update t_book
    <set>
      <if test="bookTitle != null">
        book_title = #{bookTitle,jdbcType=VARCHAR},
      </if>
      <if test="seriesId != null">
        series_id = #{seriesId,jdbcType=INTEGER},
      </if>
      <if test="bookIntro != null">
        book_intro = #{bookIntro,jdbcType=VARCHAR},
      </if>
      <if test="feature != null">
        feature = #{feature,jdbcType=VARCHAR},
      </if>
      <if test="bookDate != null">
        book_date = #{bookDate,jdbcType=DATE},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="alsoLikeId != null">
        also_like_id = #{alsoLikeId,jdbcType=INTEGER},
      </if>
      <if test="imageLink != null">
        image_link = #{imageLink,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="bookVote != null">
        book_vote = #{bookVote,jdbcType=INTEGER},
      </if>
      <if test="bookEnterNum != null">
        book_enter_num = #{bookEnterNum,jdbcType=INTEGER},
      </if>
      <if test="isEbook != null">
        is_ebook = #{isEbook,jdbcType=INTEGER},
      </if>
      <if test="ebookPrice != null">
        ebook_price = #{ebookPrice,jdbcType=NUMERIC},
      </if>
      <if test="paperOriginalPrice != null">
        paper_original_price = #{paperOriginalPrice,jdbcType=NUMERIC},
      </if>
      <if test="paperSalePrice != null">
        paper_sale_price = #{paperSalePrice,jdbcType=NUMERIC},
      </if>
      <if test="amazonLink != null">
        amazon_link = #{amazonLink,jdbcType=VARCHAR},
      </if>
      <if test="dangdangLink != null">
        dangdang_link = #{dangdangLink,jdbcType=VARCHAR},
      </if>
      <if test="jdLink != null">
        jd_link = #{jdLink,jdbcType=VARCHAR},
      </if>
      <if test="enableGift != null">
        enable_gift = #{enableGift,jdbcType=INTEGER},
      </if>
      <if test="sampleDownload != null">
        sample_download = #{sampleDownload,jdbcType=VARCHAR},
      </if>
      <if test="withBookDownload != null">
        with_book_download = #{withBookDownload,jdbcType=VARCHAR},
      </if>
      <if test="bigImageLink != null">
        big_image_link = #{bigImageLink,jdbcType=VARCHAR},
      </if>
      <if test="ninetyBookEnterNum != null">
        ninety_book_enter_num = #{ninetyBookEnterNum,jdbcType=INTEGER},
      </if>
      <if test="firstGradeId != null">
        first_grade_id = #{firstGradeId,jdbcType=INTEGER},
      </if>
      <if test="secondGradeId != null">
        second_grade_id = #{secondGradeId,jdbcType=INTEGER},
      </if>
      <if test="thirdGradeId != null">
        third_grade_id = #{thirdGradeId,jdbcType=INTEGER},
      </if>
      <if test="modifiedDate != null">
        modified_date = #{modifiedDate,jdbcType=DATE},
      </if>
      <if test="ebookSalePrice != null">
        ebook_sale_price = #{ebookSalePrice,jdbcType=NUMERIC},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Book">
    update t_book
    set book_title = #{bookTitle,jdbcType=VARCHAR},
      series_id = #{seriesId,jdbcType=INTEGER},
      book_intro = #{bookIntro,jdbcType=VARCHAR},
      feature = #{feature,jdbcType=VARCHAR},
      book_date = #{bookDate,jdbcType=DATE},
      category_id = #{categoryId,jdbcType=INTEGER},
      also_like_id = #{alsoLikeId,jdbcType=INTEGER},
      image_link = #{imageLink,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      book_vote = #{bookVote,jdbcType=INTEGER},
      book_enter_num = #{bookEnterNum,jdbcType=INTEGER},
      is_ebook = #{isEbook,jdbcType=INTEGER},
      ebook_price = #{ebookPrice,jdbcType=NUMERIC},
      paper_original_price = #{paperOriginalPrice,jdbcType=NUMERIC},
      paper_sale_price = #{paperSalePrice,jdbcType=NUMERIC},
      amazon_link = #{amazonLink,jdbcType=VARCHAR},
      dangdang_link = #{dangdangLink,jdbcType=VARCHAR},
      jd_link = #{jdLink,jdbcType=VARCHAR},
      enable_gift = #{enableGift,jdbcType=INTEGER},
      sample_download = #{sampleDownload,jdbcType=VARCHAR},
      with_book_download = #{withBookDownload,jdbcType=VARCHAR},
      big_image_link = #{bigImageLink,jdbcType=VARCHAR},
      ninety_book_enter_num = #{ninetyBookEnterNum,jdbcType=INTEGER},
      first_grade_id = #{firstGradeId,jdbcType=INTEGER},
      second_grade_id = #{secondGradeId,jdbcType=INTEGER},
      third_grade_id = #{thirdGradeId,jdbcType=INTEGER},
      modified_date = #{modifiedDate,jdbcType=DATE},
      ebook_sale_price = #{ebookSalePrice,jdbcType=NUMERIC},
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
</mapper>