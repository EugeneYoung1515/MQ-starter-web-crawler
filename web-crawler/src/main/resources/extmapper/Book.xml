<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.BookMapper">
  <insert id="insertAndReturnId" parameterType="com.example.demo.model.Book" useGeneratedKeys="true" keyProperty="bookId" keyColumn="book_id">
    insert into t_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="bookTitle != null">
        book_title,
      </if>
      <if test="seriesId != null">
        series_id,
      </if>
      <if test="bookIntro != null">
        book_intro,
      </if>
      <if test="feature != null">
        feature,
      </if>
      <if test="bookDate != null">
        book_date,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="alsoLikeId != null">
        also_like_id,
      </if>
      <if test="imageLink != null">
        image_link,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="bookVote != null">
        book_vote,
      </if>
      <if test="bookEnterNum != null">
        book_enter_num,
      </if>
      <if test="isEbook != null">
        is_ebook,
      </if>
      <if test="ebookPrice != null">
        ebook_price,
      </if>
      <if test="paperOriginalPrice != null">
        paper_original_price,
      </if>
      <if test="paperSalePrice != null">
        paper_sale_price,
      </if>
      <if test="amazonLink != null">
        amazon_link,
      </if>
      <if test="dangdangLink != null">
        dangdang_link,
      </if>
      <if test="jdLink != null">
        jd_link,
      </if>
      <if test="enableGift != null">
        enable_gift,
      </if>
      <if test="sampleDownload != null">
        sample_download,
      </if>
      <if test="withBookDownload != null">
        with_book_download,
      </if>
      <if test="bigImageLink != null">
        big_image_link,
      </if>
      <if test="ninetyBookEnterNum != null">
        ninety_book_enter_num,
      </if>
      <if test="firstGradeId != null">
        first_grade_id,
      </if>
      <if test="secondGradeId != null">
        second_grade_id,
      </if>
      <if test="thirdGradeId != null">
        third_grade_id,
      </if>
      <if test="modifiedDate != null">
        modified_date,
      </if>

      <if test="ebookSalePrice != null">
        ebook_sale_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookTitle != null">
        #{bookTitle,jdbcType=VARCHAR},
      </if>
      <if test="seriesId != null">
        #{seriesId,jdbcType=INTEGER},
      </if>
      <if test="bookIntro != null">
        #{bookIntro,jdbcType=VARCHAR},
      </if>
      <if test="feature != null">
        #{feature,jdbcType=VARCHAR},
      </if>
      <if test="bookDate != null">
        #{bookDate,jdbcType=DATE},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="alsoLikeId != null">
        #{alsoLikeId,jdbcType=INTEGER},
      </if>
      <if test="imageLink != null">
        #{imageLink,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="bookVote != null">
        #{bookVote,jdbcType=INTEGER},
      </if>
      <if test="bookEnterNum != null">
        #{bookEnterNum,jdbcType=INTEGER},
      </if>
      <if test="isEbook != null">
        #{isEbook,jdbcType=INTEGER},
      </if>
      <if test="ebookPrice != null">
        #{ebookPrice,jdbcType=NUMERIC},
      </if>
      <if test="paperOriginalPrice != null">
        #{paperOriginalPrice,jdbcType=NUMERIC},
      </if>
      <if test="paperSalePrice != null">
        #{paperSalePrice,jdbcType=NUMERIC},
      </if>
      <if test="amazonLink != null">
        #{amazonLink,jdbcType=VARCHAR},
      </if>
      <if test="dangdangLink != null">
        #{dangdangLink,jdbcType=VARCHAR},
      </if>
      <if test="jdLink != null">
        #{jdLink,jdbcType=VARCHAR},
      </if>
      <if test="enableGift != null">
        #{enableGift,jdbcType=INTEGER},
      </if>
      <if test="sampleDownload != null">
        #{sampleDownload,jdbcType=VARCHAR},
      </if>
      <if test="withBookDownload != null">
        #{withBookDownload,jdbcType=VARCHAR},
      </if>
      <if test="bigImageLink != null">
        #{bigImageLink,jdbcType=VARCHAR},
      </if>
      <if test="ninetyBookEnterNum != null">
        #{ninetyBookEnterNum,jdbcType=INTEGER},
      </if>
      <if test="firstGradeId != null">
        #{firstGradeId,jdbcType=INTEGER},
      </if>
      <if test="secondGradeId != null">
        #{secondGradeId,jdbcType=INTEGER},
      </if>
      <if test="thirdGradeId != null">
        #{thirdGradeId,jdbcType=INTEGER},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=DATE},
      </if>
      <if test="ebookSalePrice != null">
        #{ebookSalePrice,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
    <select id="selectAlsoLikeIdByBookTitle" resultType="java.lang.Integer">
      select also_like_id from t_book where book_title in
      <foreach item="item" index="index" collection="list"
               open="(" separator="," close=")">
        #{item}
      </foreach>
    </select>
      <select id="selectByBookTitle" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_book
        where book_title = #{bookTile}
      </select>
  <select id="selectIn" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_book
    where book_title in
    <foreach item="item" index="index" collection="list"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>
  <insert id="insertBatch" useGeneratedKeys="true" keyColumn="book_id" keyProperty="bookId">
    insert into t_book (book_title)
    values
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.bookTitle,jdbcType=INTEGER})
    </foreach>
  </insert>
  <update id="updateBatch">
  update t_book
  set  also_like_id=
  <foreach collection="list" item="item" index="index"
           separator=" " open="case book_id" close="end">
    when #{item.bookId} then #{item.alsoLikeId}
  </foreach>
  where book_id in
  <foreach collection="list" index="index" item="item"
           separator="," open="(" close=")">
    #{item.bookId}
  </foreach>
</update>
  <insert id="insertBatchIgnoreIfExist" useGeneratedKeys="true" keyColumn="book_id" keyProperty="bookId">
    insert into t_book (book_title)
    values
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.bookTitle,jdbcType=INTEGER})
    </foreach>
    on conflict (book_title) do nothing
  </insert>
</mapper>